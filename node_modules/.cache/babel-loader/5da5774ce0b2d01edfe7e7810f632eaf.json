{"ast":null,"code":"import { createStore } from \"redux\";\nconst initial = {\n  user: \"loading\",\n  productsdetailed: ''\n};\n\nconst Reducer = (state = initial, action) => {\n  switch (action.type) {\n    case \"user\":\n      return { ...state,\n        user: action.payload\n      };\n\n    case \"logout\":\n      return { ...state,\n        user: action.payload\n      };\n\n    case \"username\":\n      return { ...state,\n        user: { ...(state === null || state === void 0 ? void 0 : state.user),\n          userName: action.payload\n        }\n      };\n\n    case \"productsdetailed\":\n      return { ...state,\n        productsdetailed: action.payload\n      };\n\n    case \"search\":\n      return { ...state,\n        productsdetailed: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = Reducer;\nlet store = createStore(Reducer);\nexport default store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"sources":["/home/zia/work/zia/React/chat-app/src/store.js"],"names":["createStore","initial","user","productsdetailed","Reducer","state","action","type","payload","userName","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE,SADQ;AAEdC,EAAAA,gBAAgB,EAAC;AAFH,CAAhB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,OAAT,EAAkBK,MAAlB,KAA6B;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,MAAL;AACE,aAAO,EAAE,GAAGF,KAAL;AAAYH,QAAAA,IAAI,EAAEI,MAAM,CAACE;AAAzB,OAAP;;AAEF,SAAK,QAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYH,QAAAA,IAAI,EAAEI,MAAM,CAACE;AAAzB,OAAP;;AAEF,SAAK,UAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYH,QAAAA,IAAI,EAAE,EAAE,IAAGG,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEH,IAAV,CAAF;AAAkBO,UAAAA,QAAQ,EAAEH,MAAM,CAACE;AAAnC;AAAlB,OAAP;;AAEF,SAAK,kBAAL;AACI,aAAO,EAAC,GAAGH,KAAJ;AAAUF,QAAAA,gBAAgB,EAACG,MAAM,CAACE;AAAlC,OAAP;;AAEJ,SAAK,QAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAWF,QAAAA,gBAAgB,EAACG,MAAM,CAACE;AAAnC,OAAP;;AACF;AACE,aAAOH,KAAP;AAhBJ;AAkBD,CAnBD;;KAAMD,O;AAqBN,IAAIM,KAAK,GAAGV,WAAW,CAACI,OAAD,CAAvB;AACA,eAAeM,KAAf","sourcesContent":["import { createStore } from \"redux\";\n\nconst initial = {\n  user: \"loading\",\n  productsdetailed:''\n};\n\nconst Reducer = (state = initial, action) => {\n  switch (action.type) {\n    case \"user\":\n      return { ...state, user: action.payload };\n\n    case \"logout\":\n      return { ...state, user: action.payload };\n\n    case \"username\":\n      return { ...state, user: { ...state?.user, userName: action.payload } };\n\n    case \"productsdetailed\":\n        return {...state,productsdetailed:action.payload}\n\n    case \"search\":\n      return { ...state,productsdetailed:action.payload}\n    default:    \n      return state;\n  }\n};\n\nlet store = createStore(Reducer);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}